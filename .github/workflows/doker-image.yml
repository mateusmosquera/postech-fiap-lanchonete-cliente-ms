name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          context: .

      - name: Setup AWS EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Get authentication token
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_HOST }}

      - name: Build Docker Image
        run: docker build -t lanchonete-cliente .

      - name: Get Helm Chart version
        run: |
          version=$(helm show chart ./manifest/lanchonete-cliente/ | grep "^version:" | awk '{print $2}')
          echo "Helm Chart version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create tag repository
        run:
          docker tag lanchonete-cliente:latest "${{ secrets.ECR_HOST }}/lanchonete:${{ env.VERSION }}"

      - name: Push Docker Image
        run: docker push ${{ secrets.ECR_HOST }}/lanchonete-cliente:${{ env.VERSION }}

      - name: Configure kubectl
        run: aws eks update-kubeconfig --name lanchonete-cliente-cluster

      - name: Deploy to EKS using Helm
        run: |
          helm upgrade --install \
            lanchonete-cliente-cluster \
            manifest/lanchonete-cliente \
            --namespace default \
            --set image.repository=${{ secrets.ECR_HOST }}/lanchonete-cliente \
            --set image.tag=${{ env.VERSION }}
